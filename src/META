# OASIS_START
# DO NOT EDIT (digest: 030dd1e1cee743125797c92fd5d957d7)
version = "0.1"
description = "HTTP Server in OCaml"
requires =
"ocsigenserver.polytables ocsigenserver.baselib ocsigenserver.http ocsigenserver.server ocsigenserver.ext"
archive(byte) = "ocsigenserver.cma"
archive(byte, plugin) = "ocsigenserver.cma"
archive(native) = "ocsigenserver.cmxa"
archive(native, plugin) = "ocsigenserver.cmxs"
exists_if = "ocsigenserver.cma"
package "server" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 requires =
 "ocsigenserver.polytables ocsigenserver.baselib ocsigenserver.http tyxml.parser"
 archive(byte) = "server.cma"
 archive(byte, plugin) = "server.cma"
 archive(native) = "server.cmxa"
 archive(native, plugin) = "server.cmxs"
 exists_if = "server.cma"
)

package "polytables" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "polytables.cma"
 archive(byte, plugin) = "polytables.cma"
 archive(native) = "polytables.cmxa"
 archive(native, plugin) = "polytables.cmxs"
 exists_if = "polytables.cma"
)

package "nocommandline" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "nocommandline.cma"
 archive(byte, plugin) = "nocommandline.cma"
 archive(native) = "nocommandline.cmxa"
 archive(native, plugin) = "nocommandline.cmxs"
 exists_if = "nocommandline.cma"
)

package "http" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 requires = "ocsigenserver.baselib tyxml lwt.ssl ipaddr"
 archive(byte) = "http.cma"
 archive(byte, plugin) = "http.cma"
 archive(native) = "http.cmxa"
 archive(native, plugin) = "http.cmxs"
 exists_if = "http.cma"
)

package "ext" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "ext.cma"
 archive(byte, plugin) = "ext.cma"
 archive(native) = "ext.cmxa"
 archive(native, plugin) = "ext.cmxs"
 exists_if = "ext.cma"
)

package "cookies" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "ocsigen_cookies.cmo"
 archive(native) = "ocsigen_cookies.cmx"
 exists_if = "ocsigen_cookies.cmo"
)

package "commandline" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "commandline.cma"
 archive(byte, plugin) = "commandline.cma"
 archive(native) = "commandline.cmxa"
 archive(native, plugin) = "commandline.cmxs"
 exists_if = "commandline.cma"
)

package "baselib" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 requires =
 "lwt lwt.unix lwt.syntax optcomp netstring netstring-pcre cryptokit findlib dynlink"
 archive(byte) = "baselib.cma"
 archive(byte, plugin) = "baselib.cma"
 archive(native) = "baselib.cmxa"
 archive(native, plugin) = "baselib.cmxs"
 exists_if = "baselib.cma"
 package "base" (
  version = "0.1"
  description = "HTTP Server in OCaml"
  requires = "lwt"
  archive(byte) = "ocsigen_lib_base.cmo"
  archive(native) = "ocsigen_lib_base.cmx"
  exists_if = "ocsigen_lib_base.cmo"
 )
)
# OASIS_STOP

