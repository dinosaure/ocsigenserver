# OASIS_START
# DO NOT EDIT (digest: fa334e262c3f913eae4bc96e1d6d47ee)
version = "0.1"
description = "HTTP Server in OCaml"
archive(byte) = "ocsigenserver.cma"
archive(byte, plugin) = "ocsigenserver.cma"
archive(native) = "ocsigenserver.cmxa"
archive(native, plugin) = "ocsigenserver.cmxs"
exists_if = "ocsigenserver.cma"
package "server" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 requires =
 "ocsigenserver.baselib ocsigenserver.polytables ocsigenserver.http lwt.unix netstring netstring-pcre cryptokit findlib tyxml tyxml.parser lwt.syntax lwt.extra ipaddr threads"
 archive(byte) = "server.cma"
 archive(byte, plugin) = "server.cma"
 archive(native) = "server.cmxa"
 archive(native, plugin) = "server.cmxs"
 exists_if = "server.cma"
)

package "polytables" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "polytables.cma"
 archive(byte, plugin) = "polytables.cma"
 archive(native) = "polytables.cmxa"
 archive(native, plugin) = "polytables.cmxs"
 exists_if = "polytables.cma"
)

package "nocommandline" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "nocommandline.cma"
 archive(byte, plugin) = "nocommandline.cma"
 archive(native) = "nocommandline.cmxa"
 archive(native, plugin) = "nocommandline.cmxs"
 exists_if = "nocommandline.cma"
)

package "http" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 requires = "ocsigenserver.baselib netstring netstring-pcre lwt.ssl tyxml"
 archive(byte) = "http.cma"
 archive(byte, plugin) = "http.cma"
 archive(native) = "http.cmxa"
 archive(native, plugin) = "http.cmxs"
 exists_if = "http.cma"
)

package "extensions" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "extensions.cma"
 archive(byte, plugin) = "extensions.cma"
 archive(native) = "extensions.cmxa"
 archive(native, plugin) = "extensions.cmxs"
 exists_if = "extensions.cma"
 package "staticmod" (
  version = "0.1"
  description = "HTTP Server in OCaml"
  requires = "ocsigenserver ocsigenserver.baselib ocsigenserver.server lwt"
  archive(byte) = "staticmod.cma"
  archive(byte, plugin) = "staticmod.cma"
  archive(native) = "staticmod.cmxa"
  archive(native, plugin) = "staticmod.cmxs"
  exists_if = "staticmod.cma"
 )
)

package "commandline" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 archive(byte) = "commandline.cma"
 archive(byte, plugin) = "commandline.cma"
 archive(native) = "commandline.cmxa"
 archive(native, plugin) = "commandline.cmxs"
 exists_if = "commandline.cma"
)

package "baselib" (
 version = "0.1"
 description = "HTTP Server in OCaml"
 requires =
 "lwt netstring netstring-pcre cryptokit findlib tyxml lwt.syntax lwt.extra ipaddr threads dynlink optcomp"
 archive(byte) = "baselib.cma"
 archive(byte, plugin) = "baselib.cma"
 archive(native) = "baselib.cmxa"
 archive(native, plugin) = "baselib.cmxs"
 exists_if = "baselib.cma"
)
# OASIS_STOP

