# OASIS_START
# DO NOT EDIT (digest: 335dcbf5dc475f913f600b2e179c0f99)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library ocsigenserver
"src/ocsigenserver.cmxs": use_ocsigenserver
# Library polytables
"src/polytables/polytables.cmxs": use_polytables
# Library commandline
"src/commandline/yes/commandline.cmxs": use_commandline
# Library nocommandline
"src/commandline/no/nocommandline.cmxs": use_nocommandline
# Library baselib
"src/baselib/baselib.cmxs": use_baselib
<src/baselib/*.ml{,i}>: package(cryptokit)
<src/baselib/*.ml{,i}>: package(dynlink)
<src/baselib/*.ml{,i}>: package(findlib)
<src/baselib/*.ml{,i}>: package(ipaddr)
<src/baselib/*.ml{,i}>: package(lwt)
<src/baselib/*.ml{,i}>: package(lwt.extra)
<src/baselib/*.ml{,i}>: package(lwt.syntax)
<src/baselib/*.ml{,i}>: package(netstring)
<src/baselib/*.ml{,i}>: package(netstring-pcre)
<src/baselib/*.ml{,i}>: package(optcomp)
<src/baselib/*.ml{,i}>: package(tyxml)
# Object base
# Library http
"src/http/http.cmxs": use_http
<src/http/*.ml{,i}>: package(lwt.ssl)
# Object cookies
<src/http/*.ml{,i}>: package(cryptokit)
<src/http/*.ml{,i}>: package(dynlink)
<src/http/*.ml{,i}>: package(findlib)
<src/http/*.ml{,i}>: package(ipaddr)
<src/http/*.ml{,i}>: package(lwt)
<src/http/*.ml{,i}>: package(lwt.extra)
<src/http/*.ml{,i}>: package(lwt.syntax)
<src/http/*.ml{,i}>: package(netstring)
<src/http/*.ml{,i}>: package(netstring-pcre)
<src/http/*.ml{,i}>: package(optcomp)
<src/http/*.ml{,i}>: package(tyxml)
<src/http/*.ml{,i}>: use_baselib
# Library server
"src/server/server.cmxs": use_server
<src/server/*.ml{,i}>: package(cryptokit)
<src/server/*.ml{,i}>: package(dynlink)
<src/server/*.ml{,i}>: package(findlib)
<src/server/*.ml{,i}>: package(ipaddr)
<src/server/*.ml{,i}>: package(lwt)
<src/server/*.ml{,i}>: package(lwt.extra)
<src/server/*.ml{,i}>: package(lwt.ssl)
<src/server/*.ml{,i}>: package(lwt.syntax)
<src/server/*.ml{,i}>: package(lwt.unix)
<src/server/*.ml{,i}>: package(netstring)
<src/server/*.ml{,i}>: package(netstring-pcre)
<src/server/*.ml{,i}>: package(optcomp)
<src/server/*.ml{,i}>: package(tyxml)
<src/server/*.ml{,i}>: package(tyxml.parser)
<src/server/*.ml{,i}>: use_baselib
<src/server/*.ml{,i}>: use_http
<src/server/*.ml{,i}>: use_polytables
# Library ext
"src/extensions/ext.cmxs": use_ext
# Library staticmod
"src/extensions/staticmod.cmxs": use_staticmod
# Library accesscontrol
"src/extensions/accesscontrol.cmxs": use_accesscontrol
# Library authbasic
"src/extensions/authbasic.cmxs": use_authbasic
# Library cgimod
"src/extensions/cgimod.cmxs": use_cgimod
# Library cors
"src/extensions/cors.cmxs": use_cors
# Library deflatemod
"src/extensions/deflatemod.cmxs": use_deflatemod
<src/extensions/*.ml{,i}>: package(camlzip)
# Library extendconfiguration
"src/extensions/extendconfiguration.cmxs": use_extendconfiguration
# Library extensiontemplate
"src/extensions/extensiontemplate.cmxs": use_extensiontemplate
# Library ocsigen_comet
"src/extensions/ocsigen_comet.cmxs": use_ocsigen_comet
<src/extensions/*.ml{,i}>: package(react)
# Library outputfilter
"src/extensions/outputfilter.cmxs": use_outputfilter
# Library redirectmod
"src/extensions/redirectmod.cmxs": use_redirectmod
# Library revproxy
"src/extensions/revproxy.cmxs": use_revproxy
# Library rewritemod
"src/extensions/rewritemod.cmxs": use_rewritemod
# Library userconf
"src/extensions/userconf.cmxs": use_userconf
<src/extensions/*.ml{,i}>: package(cryptokit)
<src/extensions/*.ml{,i}>: package(dynlink)
<src/extensions/*.ml{,i}>: package(findlib)
<src/extensions/*.ml{,i}>: package(ipaddr)
<src/extensions/*.ml{,i}>: package(lwt)
<src/extensions/*.ml{,i}>: package(lwt.extra)
<src/extensions/*.ml{,i}>: package(lwt.ssl)
<src/extensions/*.ml{,i}>: package(lwt.syntax)
<src/extensions/*.ml{,i}>: package(lwt.unix)
<src/extensions/*.ml{,i}>: package(netstring)
<src/extensions/*.ml{,i}>: package(netstring-pcre)
<src/extensions/*.ml{,i}>: package(optcomp)
<src/extensions/*.ml{,i}>: package(tyxml)
<src/extensions/*.ml{,i}>: package(tyxml.parser)
<src/extensions/*.ml{,i}>: use_baselib
<src/extensions/*.ml{,i}>: use_http
<src/extensions/*.ml{,i}>: use_ocsigenserver
<src/extensions/*.ml{,i}>: use_polytables
<src/extensions/*.ml{,i}>: use_server
# Executable ocsigenserver
"bin/server_main.native": package(cryptokit)
"bin/server_main.native": package(dynlink)
"bin/server_main.native": package(findlib)
"bin/server_main.native": package(ipaddr)
"bin/server_main.native": package(lwt)
"bin/server_main.native": package(lwt.extra)
"bin/server_main.native": package(lwt.ssl)
"bin/server_main.native": package(lwt.syntax)
"bin/server_main.native": package(lwt.unix)
"bin/server_main.native": package(netstring)
"bin/server_main.native": package(netstring-pcre)
"bin/server_main.native": package(optcomp)
"bin/server_main.native": package(tyxml)
"bin/server_main.native": package(tyxml.parser)
"bin/server_main.native": use_baselib
"bin/server_main.native": use_http
"bin/server_main.native": use_polytables
"bin/server_main.native": use_server
<bin/*.ml{,i}>: package(cryptokit)
<bin/*.ml{,i}>: package(dynlink)
<bin/*.ml{,i}>: package(findlib)
<bin/*.ml{,i}>: package(ipaddr)
<bin/*.ml{,i}>: package(lwt)
<bin/*.ml{,i}>: package(lwt.extra)
<bin/*.ml{,i}>: package(lwt.ssl)
<bin/*.ml{,i}>: package(lwt.syntax)
<bin/*.ml{,i}>: package(lwt.unix)
<bin/*.ml{,i}>: package(netstring)
<bin/*.ml{,i}>: package(netstring-pcre)
<bin/*.ml{,i}>: package(optcomp)
<bin/*.ml{,i}>: package(tyxml)
<bin/*.ml{,i}>: package(tyxml.parser)
<bin/*.ml{,i}>: use_baselib
<bin/*.ml{,i}>: use_http
<bin/*.ml{,i}>: use_polytables
<bin/*.ml{,i}>: use_server
# OASIS_STOP

<src/baselib/*.ml{,i}>: syntax(camlp4o)
<bin/*.ml{,i}>: linkall
"bin/server_main.native": linkall
<src/baselib/dynlink_wrapper.ml>: package(optcomp), syntax(camlp4o)
true: thread
